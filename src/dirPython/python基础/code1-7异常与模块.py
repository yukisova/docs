"""
try:
    可能发生错误的代码
except (异常类型元组形式) as 临时变量 :
    出现异常执行的代码（若指定了异常类型就会捕获指定异常）
else:
    没有出现异常执行的代码
finally:
    无论有没有异常都会执行的代码

异常具有传递性，如果所有函数中都没有进行捕获，最后会报错
"""

"""
模块: py文件，能够使用其中定义的各种部分
导入：
[from 模块名] import [模块名 | 包名 | 类……] [as 别名]
    每个要导入的部分之间要用 | 来区分
    *通配符 可以导入模块内部全部的部分，但会被对应模块的__all__变量限制

# 若导入了不同模块的同名功能，后者会覆盖前者
# 若没有指定main变量，导入的所有模块都会自动执行语句

调试：以下语句在作为模块被引入时不会自动执行，只有当在模块界面使用调试的时候才会执行，用于测试代码
    __name__是每个py里面都内置的变量，当界面停留在对应py里面时__name__值才为__main__

if __name__ == '__main__':
    需要进行调试的语句

限制导出给*：内置变量__all__
    为列表类型，默认包含着py中所有的元素，可以指定元素限制导给*

__all__ = ['testA']
    只会向*导出名为testA的元素
"""

"""
包：文件夹，包含一个__init__.py文件与一堆的模块
    __init__.py文件中会使用__all__来控制导出给*
新的写法
import 包名.模块名
    默认导入包中模块后会导入所有模块的内容，使用时要.对应的功能，建议别名走起
"""

# 安装对应python包 pip install 对应包名