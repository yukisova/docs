
# 以下为单行注释

"""
以下为多行注释
"""

# 字面量：在代码中被写下来的固定值（常量）

# 有六种值类型
# Number    （除了整数浮点数布尔外py还多了个复数，以j结尾）

# 以下均为数据容器类型
# String        描述文本
# List          有序可变序列
# Tuple         有序不可变序列
# Set           无序集合（不重复）
# Dictionary    无序键值对

# 变量定义—— 变量名=变量值
# 多赋值语句
money,penny = 2,3 # 2赋给money，3赋给penny

# 输出语句： print(输出参数1，输出参数2……) 默认会换行
# 有字符串参与的话可以使用+号进行拼接
print("钱包还有",money)

# 输入语句： input(提示信息)    获取的数据永远是字符串类型，可能需要进行类型转换
code = input("请输入：")

# 数据类型查看：type(需要查看的数据)
print(type(money))

# 数据类型转换：int(对应数据) str(~) float(~) 返回值为对应的值，字符串不能转数字

print(str(money))

# py标识符规范：下划线命名
student_money = 3

# 特殊运算符（只包含新增的）
# / 除号：非整除    // 整除号       ** 指数号
# := 海象赋值   赋值的同时返回值
a = 12          # 赋值表达式本身没有返回值，如果需要将表达式再往外返回，需要用到海象赋值
b = (a := 12)   # b也赋值到了12
# and 与    or 或   not 非
# 成员运算符（数据容器专用）    in  在      not in 不在
# 身份运算符（比较存储地址）    is  是      is not 不是


# 字符串拓展
# 'a' "a" """a""" '''a'''   都可以看成字符串，
# 三引号会自动识别换行符并显示出来
# 字符串格式化  %占位运算符（类似printf）
message1 = "这是示例代码，"+ "这还是示例代码" # 只能够在字符串之间拼接
message = "这是实例代码，%s" % money        # 可以让数字进入字符串
message2 = "这是示例代码，%s, %s" % (student_money,money)   # 多个字符拼接要括起使用
# print(message2)
# %s 内容转换为字符串
# %d 内容转换为整数
# %f 内容转换为浮点型（默认6位） m（控制宽度）.n（控制小数点精度）

# 字符串格式化2 （类似模板字符串）  不会做精度控制
message3 = f"这是示例代码{student_money}"

